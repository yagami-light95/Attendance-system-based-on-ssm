<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.dao.LeaveMapper" >
  <resultMap id="BaseResultMap" type="com.system.pojo.Leave" >
    <constructor >
      <idArg column="RECORD_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="DEPARTMENT_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="STAFF_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="HANIN_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="LEAVE_START_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="LEAVE_END_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="APPLICATION_STATE" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="REASON" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="REPLY" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="HANDLE_TIME" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    RECORD_ID, DEPARTMENT_ID, STAFF_ID, HANIN_TIME, LEAVE_START_TIME, LEAVE_END_TIME, 
    APPLICATION_STATE, REASON, REPLY, HANDLE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from leave_record
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from leave_record
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.system.pojo.Leave" >
    insert into leave_record (RECORD_ID, DEPARTMENT_ID, STAFF_ID, 
      HANIN_TIME, LEAVE_START_TIME, LEAVE_END_TIME, 
      APPLICATION_STATE, REASON, REPLY, 
      HANDLE_TIME)
    values (#{recordId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{staffId,jdbcType=VARCHAR}, 
      #{haninTime,jdbcType=TIMESTAMP}, #{leaveStartTime,jdbcType=TIMESTAMP}, #{leaveEndTime,jdbcType=TIMESTAMP}, 
      #{applicationState,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{reply,jdbcType=VARCHAR}, 
      #{handleTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.system.pojo.Leave" >
    insert into leave_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        RECORD_ID,
      </if>
      <if test="departmentId != null" >
        DEPARTMENT_ID,
      </if>
      <if test="staffId != null" >
        STAFF_ID,
      </if>
      <if test="haninTime != null" >
        HANIN_TIME,
      </if>
      <if test="leaveStartTime != null" >
        LEAVE_START_TIME,
      </if>
      <if test="leaveEndTime != null" >
        LEAVE_END_TIME,
      </if>
      <if test="applicationState != null" >
        APPLICATION_STATE,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="reply != null" >
        REPLY,
      </if>
      <if test="handleTime != null" >
        HANDLE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recordId != null" >
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="haninTime != null" >
        #{haninTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveStartTime != null" >
        #{leaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveEndTime != null" >
        #{leaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationState != null" >
        #{applicationState,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null" >
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.pojo.Leave" >
    update leave_record
    <set >
      <if test="departmentId != null" >
        DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null" >
        STAFF_ID = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="haninTime != null" >
        HANIN_TIME = #{haninTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveStartTime != null" >
        LEAVE_START_TIME = #{leaveStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveEndTime != null" >
        LEAVE_END_TIME = #{leaveEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applicationState != null" >
        APPLICATION_STATE = #{applicationState,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        REASON = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        REPLY = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null" >
        HANDLE_TIME = #{handleTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.pojo.Leave" >
    update leave_record
    set DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER},
      STAFF_ID = #{staffId,jdbcType=VARCHAR},
      HANIN_TIME = #{haninTime,jdbcType=TIMESTAMP},
      LEAVE_START_TIME = #{leaveStartTime,jdbcType=TIMESTAMP},
      LEAVE_END_TIME = #{leaveEndTime,jdbcType=TIMESTAMP},
      APPLICATION_STATE = #{applicationState,jdbcType=VARCHAR},
      REASON = #{reason,jdbcType=VARCHAR},
      REPLY = #{reply,jdbcType=VARCHAR},
      HANDLE_TIME = #{handleTime,jdbcType=TIMESTAMP}
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>

  <insert id="handinLeave" parameterType="com.system.pojo.Leave" >
   insert into leave_record (RECORD_ID, DEPARTMENT_ID, STAFF_ID,
      HANIN_TIME, LEAVE_START_TIME, LEAVE_END_TIME,
      APPLICATION_STATE, REASON, REPLY,
      HANDLE_TIME)
    values (#{recordId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, #{staffId,jdbcType=VARCHAR},
      now(), #{leaveStartTime,jdbcType=TIMESTAMP}, #{leaveEndTime,jdbcType=TIMESTAMP},
      0, #{reason,jdbcType=VARCHAR}, #{reply,jdbcType=VARCHAR},
      #{handleTime,jdbcType=TIMESTAMP})
  </insert>

  <select id="countById"  parameterType="string" resultType="int">

    select count(1) from leave_record where STAFF_ID = #{id}

  </select>

  <select id="findByPaging" parameterType="Map" resultMap="BaseResultMap">
     select * from leave_record
     where STAFF_ID = #{id,jdbcType=VARCHAR}
     order by HANIN_TIME desc
     limit #{toPageNo}, #{pageSize}
   </select>

  <select id="findByRecordId" parameterType="int" resultMap="BaseResultMap">
     select * from leave_record
     where RECORD_ID = #{recordId}
   </select>

  <select id="getUnhandledCount" parameterType="int" resultType="int">

     select count(1) from leave_record
     where DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER}
     and APPLICATION_STATE = 0

   </select>

  <select id="countByDepartmentId"  parameterType="int" resultType="int">

    select count(1) from leave_record where DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER}

  </select>

  <select id="findByPagingD" parameterType="Map" resultMap="BaseResultMap">
     select * from leave_record
     where DEPARTMENT_ID = #{departmentId,jdbcType=INTEGER}
     order by HANIN_TIME desc
     limit #{toPageNo}, #{pageSize}
   </select>

  <update id="handleLeave" parameterType="Map" >
    update leave_record
    set
      APPLICATION_STATE = #{result,jdbcType=VARCHAR},
      REPLY = #{reply,jdbcType=VARCHAR},
      HANDLE_TIME = now()
    where RECORD_ID = #{recordId,jdbcType=INTEGER}
  </update>

  <select id="loadLeaveList" resultMap="BaseResultMap">
     select * from leave_record
     where RECORD_ID is not null
   </select>

</mapper>